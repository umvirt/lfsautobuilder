#!/bin/bash

# Read config file
. config/config.sh
# Get values
. data/configparser.sh

echo -e "Preparing for building $LFS_TARGET_ARCH disk image...\n"

echo -e "Unmounting build/builddir mount point...\n"

umount build/builddir
echo
echo -e "Deleting buid directory contents...\n"
rm -rfv build/*
echo

if [[ $LFS_TARGET_ARCH = "amd64" ]]
then
echo "Preparing for building amd64..."
fi

if [[ $LFS_TARGET_ARCH = "i686" ]]
then
echo "Preparing for building i686..."
fi

if [[ $LFS_TARGET_ARCH = "i586" ]]
then
echo "Preparing for building i586..."
fi

echo -e "Copying main scripts... \n"
cp -v data/stages/* build/
echo
echo -e "Copying main user scripts...  \n"
cp -rfv data/scripts build
echo
if [[ $LFS_TARGET_INIT = "sysv" ]]
then
echo -e "Copying SysV specific chroot scripts ...\n"
cp -rfv data/cscripts.sysv build/cscripts
echo
fi

if [[ $LFS_TARGET_INIT = "systemd" ]]
then
echo -e "Copying Systemd specific chroot scripts ...\n"
cp -rfv data/cscripts.systemd build/cscripts
echo
fi

echo -e "Writing config file 'env.sh'...\n"
echo '#Configuration file for scripts to run on host as root' > build/env.sh
echo  >> build/env.sh
echo 'PWD=`pwd`' >> build/env.sh
echo 'LFS="$PWD/builddir"' >> build/env.sh
echo 'MAKEFLAGS="-j`nproc`"' >> build/env.sh
echo 'PARTITION="sda1"' >>  build/env.sh
echo  >> build/env.sh
echo 'echo $LFS' >> build/env.sh
echo  >> build/env.sh
echo 'export PWD LFS MAKEFLAGS' >> build/env.sh

echo '---'
cat build/env.sh
echo '---'
echo
echo -e "Writing config file 'userenv.sh'...\n"

cat > build/userenv.sh << "EOF"
# Configuration file for scripts to run on target partition as lfs user

# Load configuration file for scripts to run as root user
. env.sh
# Configutation from chapter 4.4.
set +h
umask 022
LC_ALL=POSIX
EOF

if [[ $LFS_TARGET_ARCH = "amd64" ]]
then

echo 'LFS_TGT=$(uname -m)-lfs-linux-gnu' >> build/userenv.sh

else

echo "LFS_TGT=$LFS_TARGET_ARCH-lfs-linux-gnu" >> build/userenv.sh

fi

cat >> build/userenv.sh << "EOF"
PATH=/usr/bin
if [ ! -L /bin ]; then PATH=/bin:$PATH; fi
PATH=$LFS/tools/bin:$PATH
CONFIG_SITE=$LFS/usr/share/config.site
export LFS LC_ALL LFS_TGT PATH CONFIG_SITE
EOF

echo '---'
cat build/userenv.sh
echo '---'

echo -e "Creating directory 'cscripts.config'...\n"

mkdir -v 'build/cscripts.config'

echo -e "Writing config file 'cscripts.config/config.sh'...\n"

cat >> build/cscripts.config/config.sh << "EOF"
ULFS_TESTS="NO"
ULFS_CRITICAL_TESTS="NO"
ULFS_DOCS="NO"
ULFS_COPY_KERNEL_SOURCES="YES"

MAKEFLAGS="-j`nproc`"
NINJAJOBS=`nproc`
EOF

echo '---'
cat build/cscripts.config/config.sh
echo '---'

echo -e "Writing config file 'cscripts.config/env.sh'...\n"

cat > build/cscripts.config/env.sh << "EOF"
. /cscripts/config.sh
PATH=/usr/bin:/usr/sbin
LC_ALL=POSIX
EOF


if [[ $LFS_TARGET_ARCH = "amd64" ]]
then

echo 'LFS_TGT=$(uname -m)-lfs-linux-gnu' >> build/cscripts.config/env.sh

else

echo "LFS_TGT=$LFS_TARGET_ARCH-lfs-linux-gnu" >> build/cscripts.config/env.sh

fi

cat >> build/cscripts.config/env.sh << "EOF"
LANG=C
export PATH LANG ULFS_TESTS ULFS_CRITICAL_TESTS ULFS_DOCS ULFS_COPY_KERNEL_SOURCES NINJAJOBS MAKEFLAGS LFS_TGT
PWD=`pwd`
echo "PWD DIR: $PWD"
echo "RUN TESTS: $ULFS_TESTS"
echo "RUN CRITICAL TESTS: $ULFS_CRITICAL_TESTS"
echo "INSTALL DOCUMENTATION: $ULFS_DOCS"
echo "COPY LINUX KERNEL SOURCES: $ULFS_COPY_KERNEL_SOURCES"
echo
echo "MAKE FLAGS: $MAKEFLAGS"
echo "NINJA THREADS: $NINJAJOBS"
sleep 1
EOF

echo '---'
cat build/cscripts.config/env.sh
echo '---'

echo -e "\nCreating symlink to sources directory\n"

ln -sv ../src/packages build/src

echo -e "\nCreating directories...\n"
mkdir -v build/{builddir,log,tmp}

echo -e "\nSetting permissions...\n"

chmod -v 777 build/{builddir,log,tmp}
chmod -v 777 build/{env.sh,userenv.sh,cscripts.config/{config.sh,env.sh}}

echo -e "\nBuild directory created\n"


